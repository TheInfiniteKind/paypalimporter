<?xml version="1.0" encoding="utf-8"?>
<project name="paypalimporter" default="all" basedir=".">

  <target name="-init">
      <property name="src"            value="src/main/java"/>
      <property name="resources"      value="src/main/resources"/>
      <property name="test"           value="src/test/java"/>
      <property name="test-resources" value="src/test/resources"/>
      <property name="lib"            value="lib"/>
      <property name="dist"           value="target"/>
      <property name="build"          value="${dist}/classes"/>
      <property name="docs"           value="docs"/>
      <property name="log"            value="logs"/>
      <property name="privkeyfile"    value="${resources}/priv_key"/>
      <property name="pubkeyfile"     value="${resources}/pub_key"/>
      <property name="privkeyid"      value="99"/>
      <property name="debug"          value="on"/>
      <property name="optimize"       value="on"/>
      <property name="descriptor.file"
          value="${src}/com/moneydance/modules/features/paypalimporter/meta_info.dict"/>
      <property name="jar.file"
          value="${dist}/paypalimporter.mxt"/>
      <property file="user.properties" />


      <available file="${privkeyfile}" property="privkeyfile.present"/>

      <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
        classpath="${lib}/checkstyle-6.14.1-all.jar"/>

      <taskdef name="pmd"
        classname="net.sourceforge.pmd.ant.PMDTask"
        classpath="${lib}/pmd-core-5.4.1.jar;${lib}/pmd-java-5.4.1.jar;${lib}/jaxen-1.1.6.jar;${lib}/asm-5.0.4.jar;${lib}/commons-io-2.4.jar;${lib}/commons-lang3-3.4.jar"/>

      <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask"
        classpath="${lib}/jarjar-1.4.jar"/>

      <taskdef resource="proguard/ant/task.properties"
             classpath="${lib}/proguard-5.2.1.jar" />

      <path id="compile.classpath">
            <pathelement path="${lib}/moneydance-1119.jar"/>
            <pathelement path="${lib}/commons-lang-2.6.jar"/>
            <pathelement path="${lib}/commons-lang3-3.4.jar"/>
            <pathelement path="${lib}/commons-configuration-1.10.jar"/>
            <pathelement path="${lib}/httpcore-4.3.jar"/>
            <pathelement path="${lib}/httpclient-4.3.jar"/>
            <pathelement path="${lib}/jcip-annotations-1.0.jar"/>
            <pathelement path="${lib}/jgoodies-common-1.9.0.jar"/>
            <pathelement path="${lib}/jgoodies-forms-1.10.jar"/>
            <pathelement path="${lib}/jgoodies-validation-2.5.1.jar"/>
            <pathelement path="${lib}/google-analytics-java-1.1.2.jar"/>
            <pathelement path="${lib}/merchantsdk-2.14.117.jar"/>
            <pathelement path="${lib}/paypal-core-paypalimporter-1.7.0.jar"/>
            <pathelement path="${lib}/prompt.jar"/>
            <pathelement path="${lib}/slf4j-api-1.7.13.jar"/>
      </path>

      <path id="test.classpath">
        <pathelement path="${lib}/moneydance-1119.jar"/>
        <pathelement path="${lib}/commons-configuration-1.10.jar"/>
        <pathelement path="${lib}/commons-lang-2.6.jar"/>
        <pathelement path="${lib}/commons-lang3-3.4.jar"/>
        <pathelement path="${lib}/commons-logging-1.2.jar"/>
        <pathelement path="${lib}/dropbox-java-sdk-1.5.jar"/>
        <pathelement path="${lib}/httpcore-4.3.jar"/>
        <pathelement path="${lib}/httpclient-4.3.jar"/>
        <pathelement path="${lib}/java-hamcrest-2.0.0.0.jar"/>
        <pathelement path="${lib}/jcip-annotations-1.0.jar"/>
        <pathelement path="${lib}/jgoodies-common-1.9.0.jar"/>
        <pathelement path="${lib}/jgoodies-forms-1.10.jar"/>
        <pathelement path="${lib}/jgoodies-validation-2.5.1.jar"/>
        <pathelement path="${lib}/google-analytics-java-1.1.2.jar"/>
        <pathelement path="${lib}/jmockit-coverage-1.5.jar"/>
        <pathelement path="${lib}/jmockit-1.5.jar"/>
        <pathelement path="${lib}/junit-4.12.jar"/>
        <pathelement path="${lib}/merchantsdk-2.14.117.jar"/>
        <pathelement path="${lib}/paypal-core-paypalimporter-1.7.0.jar"/>
        <pathelement path="${lib}/prompt.jar"/>
        <pathelement path="${lib}/slf4j-api-1.7.13.jar"/>
        <pathelement path="${lib}/slf4j-simple-1.7.13.jar"/>
        <pathelement path="${build}"/>
      </path>

      <path id="manifest.classpath">
        <pathelement path="${lib}/moneydance-1119.jar"/>
      </path>

      <path id="sign.classpath">
        <pathelement path="${lib}/moneydance-1119.jar"/>
        <pathelement path="${lib}/extadmin.jar"/>
      </path>
  </target>


  <target name="-prepare" depends="-init">
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}"/>
  </target>


  <target name="clean"
          depends="-init"
          description="Wipe the slate clean, to be used before starting the build process.">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>


  <target name="gendeps"
          depends="-init"
          description="Generates custom dependencies.">

    <antcall target="-genpaypalcore"/>
  </target>


  <target name="-genpaypalcore" depends="-init">

    <!-- Clone tagged version from GitHub repository -->
    <exec executable="git" failonerror="true">
        <arg line="clone -b v1.7.0 --single-branch git@github.com:paypal/sdk-core-java.git --depth=1 ${dist}/paypal-core-java"/>
    </exec>

    <!-- Apply local patch -->
    <exec executable="patch" failonerror="true">
        <arg line="-p 1 -d ${dist}/paypal-core-java -i ../../fix_proxies.patch"/>
    </exec>

    <!-- Generate new JAR file -->
    <exec executable="mvn" failonerror="true">
        <arg line="package -f ${dist}/paypal-core-java/pom.xml"/>
    </exec>
    <copy file="${dist}/paypal-core-java/target/paypal-core-1.7.0.jar"
          tofile="${lib}/paypal-core-paypalimporter-1.7.0.jar"/>
  </target>


  <target name="genkeys"
          depends="-init"
          description="Generates a passphrase-protected key pair.">
    <java classpathref="sign.classpath"
          classname="com.moneydance.admin.KeyAdmin">
      <arg value="genkey"/>
      <arg value="${privkeyfile}"/>
      <arg value="${pubkeyfile}"/>
    </java>
  </target>


  <target name="compile" depends="-prepare">
        <javac source="1.7"
               target="1.7"
               srcdir="${src}"
               destdir="${build}"
               debug="${debug}"
               optimize="${optimize}"
               classpathref="compile.classpath"
               includeantruntime="true"
               includes="com/moneydance/modules/features/paypalimporter/**"
               bootclasspath="${boot.classpath}"/>
  </target>


  <target name="-mxt" depends="compile">
    <manifestclasspath property="jar.classpath"
                       jarfile="${jar.file}">
      <classpath refid="manifest.classpath"/>
    </manifestclasspath>

    <jar jarfile="${build}/external-libs.jar">
        <zipgroupfileset dir="${lib}">
            <include name="commons-lang-2.6.jar"/>
            <include name="commons-lang3-3.4.jar"/>
            <include name="commons-configuration-1.10.jar"/>
            <include name="httpcore-4.3.jar"/>
            <include name="httpclient-4.3.jar"/>
            <include name="jcip-annotations-1.0.jar"/>
            <include name="jgoodies-common-1.9.0.jar"/>
            <include name="jgoodies-forms-1.10.jar"/>
            <include name="jgoodies-validation-2.5.1.jar"/>
            <include name="commons-logging-1.2.jar"/>
            <include name="google-analytics-java-1.1.2.jar"/>
            <include name="merchantsdk-2.14.117.jar"/>
            <include name="paypal-core-paypalimporter-1.7.0.jar"/>
            <include name="prompt.jar"/>
            <include name="slf4j-api-1.7.13.jar"/>
            <include name="slf4j-nop-1.7.13.jar"/>
        </zipgroupfileset>
    </jar>

    <!-- Wait for one second to avoid getting warnings about the
         files having modification dates in the future. -->
    <sleep seconds="1"/>

    <!-- run the timestamp task -->
    <tstamp>
      <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss"/>
    </tstamp>

    <jarjar jarfile="${jar.file}">
      <fileset dir="" includes="NOTICE"/>
      <fileset dir="" includes="LICENSE"/>
      <fileset dir="${src}" includes="
    com/moneydance/modules/features/paypalimporter/meta_info.dict"/>
      <fileset dir="${resources}" includes="*"/>
      <fileset dir="${build}"
         includes="com/moneydance/modules/features/paypalimporter/**"/>

      <manifest>
        <attribute name="Class-Path"
            value="${jar.classpath}"/>
        <attribute name="Built-By"
            value="${user.name}" />
        <attribute name="Built-Date"
            value="${TODAY}"/>
      </manifest>

      <zipfileset src="${build}/external-libs.jar">
        <exclude name="*"/>
        <exclude name="META-INF/**/*"/>
      </zipfileset>

      <rule pattern="com.jgoodies.**"
            result="com.moneydance.modules.features.paypalimporter.jgoodies.@1"/>

      <rule pattern="org.apache.http.**"
            result="com.moneydance.modules.features.paypalimporter.apache.http.@1"/>
    </jarjar>

    <move file="${jar.file}" tofile="${build}/paypalimporter.jar"/>
    
    <proguard configuration="proguard.cfg" forceprocessing="true">
        <injar  location="${build}/paypalimporter.jar" />
        <outjar location="${build}/proguard-paypalimporter.jar" />
    </proguard>

    <move file="${build}/proguard-paypalimporter.jar" tofile="${jar.file}"/>

  </target>


  <target name="sign"
          depends="-init"
          if="privkeyfile.present"
          description="Signs an MXT file with a private key that must already exist.">
    <java classpathref="sign.classpath"
          classname="com.moneydance.admin.KeyAdmin">
      <arg value="signextjar"/>
      <arg value="${privkeyfile}"/>
      <arg value="${privkeyid}"/>
      <arg value="paypalimporter"/>
      <arg line="${jar.file}"/>
    </java>

    <move file="s-paypalimporter.mxt" tofile="${jar.file}"/>
  </target>


  <target name="dist" depends="-prepare" description="Produces the distributable.">
    <antcall target="compile"/>
    <antcall target="-mxt"/>
  </target>


  <target name="test" depends="compile"
    description="Executes the unit tests.">

    <copy todir="${build}">
      <fileset dir="${test-resources}" includes="*"/>
    </copy>

    <javac source="1.7"
           target="1.7"
           srcdir="${test}"
           destdir="${build}"
           debug="${debug}"
           optimize="${optimize}"
           classpathref="test.classpath"
           includeantruntime="true"
           includes="com/moneydance/modules/features/paypalimporter/**"
           bootclasspath="${boot.classpath}"/>

    <copy todir="${build}">
      <fileset dir="${src}" includes="
        com/moneydance/modules/features/paypalimporter/meta_info.dict"/>
    </copy>

    <copy todir="${build}">
      <fileset dir="${resources}" includes="*"/>
    </copy>

  	<junit printsummary="yes"
  	       haltonfailure="yes"
  	       showoutput="true"
  	       enabletestlistenerevents="true"
  	       fork="yes">
      <classpath refid="test.classpath"/>
      <test name="com.moneydance.modules.features.paypalimporter.AllUnitTests"/>
    </junit>
  </target>


  <target name="test-all" depends="compile"
    description="Executes all tests and generates an HTML report using JMockit Coverage.">

    <javac source="1.7"
           target="1.7"
           srcdir="${test}"
           destdir="${build}"
           debug="${debug}"
           optimize="${optimize}"
           classpathref="test.classpath"
           includeantruntime="true"
           includes="com/moneydance/modules/features/paypalimporter/**"
           bootclasspath="${boot.classpath}"/>

    <copy todir="${build}">
      <fileset dir="${src}" includes="
        com/moneydance/modules/features/paypalimporter/meta_info.dict"/>
    </copy>

    <copy todir="${build}">
      <fileset dir="${resources}" includes="*"/>
    </copy>

    <junit printsummary="yes"
           haltonfailure="yes"
           showoutput="true"
           enabletestlistenerevents="true"
           fork="yes">
      <classpath refid="test.classpath"/>
      <test name="com.moneydance.modules.features.paypalimporter.AllTests"/>
      <sysproperty key="jmockit-coverage-excludes"
                   value=".*AllUnitTests|.*AllTests|.*Stub.*|.*Mock.*|.*ConsoleRunner.*"/>
      <sysproperty key="jmockit-coverage-outputDir"
                   value="${docs}/coverage-report"/>
    </junit>
  </target>


  <target name="main" depends="-prepare">
    <antcall target="dist"/>
    <antcall target="test"/>
  </target>


  <target name="all" depends="-prepare">
    <antcall target="clean"/>
    <antcall target="dist"/>
    <antcall target="sign" />
    <antcall target="test" />
  </target>


  <target name="javadocs"
          depends="-init"
          description="Creates Javadoc documentation with references to external documentations.">

    <delete>
      <fileset dir="${docs}/api" includes="**/*"/>
    </delete>

    <javadoc packagenames="com.moneydance.modules.features.paypalimporter.*"
             classpathref="compile.classpath"
             sourcepath="${src}"
             excludepackagenames=""
             defaultexcludes="true"
             destdir="${docs}/api"
             access="package"
             author="true"
             version="true"
             use="true"
             windowtitle="PayPal Importer for Moneydance"
             linksource="true"
             verbose="no">
      <doctitle><![CDATA[<h1>PayPal Importer for Moneydance</h1>]]></doctitle>
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
      <link href="http://moneydance.com/dev/apidoc/"/>
      <link href="https://brsanthu.github.io/google-analytics-java/javadocs/"/>
      <link href="http://www.slf4j.org/apidocs/"/>
      <link href="http://commons.apache.org/configuration/apidocs/"/>
      <link href="https://commons.apache.org/proper/commons-lang/javadocs/api-3.4/"/>
      <link href="https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/"/>
      <link href="http://commons.apache.org/logging/apidocs/"/>
      <footer><![CDATA[
        <a href="https://github.com/my-flow/paypalimporter">
         PayPal Importer on GitHub
        </a>
      ]]></footer>
    </javadoc>
  </target>


  <target name="checkstyle-report"
          depends="-init"
          description="Generates a report of code convention violations.">
    <delete>
      <fileset dir="${docs}/checkstyle-report" includes="**/*"/>
    </delete>

    <checkstyle config="${docs}/paypalimporter_checks.xml" failOnViolation="false">
      <fileset dir="${src}" includes="**/*.java"/>
      <formatter type="xml" tofile="${docs}/checkstyle_report.xml"/>
    </checkstyle>

    <xslt in="${docs}/checkstyle_report.xml"
          out="${docs}/checkstyle-report/index.html"
          style="${docs}/checkstyle-noframes-sorted.xsl"/>
  </target>


  <target name="pmd-report"
    depends="-init"
    description="Runs a set of static code analysis rules and generates a list of problems found.">

    <delete>
      <fileset dir="${docs}/pmd-report" includes="**/*"/>
    </delete>

    <pmd shortFilenames="true">
      <ruleset>java-basic</ruleset>
      <ruleset>java-braces</ruleset>
      <ruleset>java-clone</ruleset>
      <ruleset>java-codesize</ruleset>
      <ruleset>java-comments</ruleset>
      <ruleset>java-design</ruleset>
      <ruleset>java-empty</ruleset>
      <ruleset>java-finalizers</ruleset>
      <ruleset>java-imports</ruleset>
      <ruleset>java-logging-jakarta-commons</ruleset>
      <ruleset>java-migrating</ruleset>
      <ruleset>java-naming</ruleset>
      <ruleset>java-strictexception</ruleset>
      <ruleset>java-strings</ruleset>
      <ruleset>java-sunsecure</ruleset>
      <ruleset>java-typeresolution</ruleset>
      <ruleset>java-unnecessary</ruleset>
      <ruleset>java-unusedcode</ruleset>

      <fileset dir="${src}" includes="**/*.java"/>
      <formatter type="html" toFile="${docs}/pmd-report/pmd-report.html"/>
    </pmd>
  </target>

</project>
